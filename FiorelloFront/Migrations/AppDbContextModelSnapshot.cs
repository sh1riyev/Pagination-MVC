// <auto-generated />
using System;
using FiorelloFront.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FiorelloFront.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.30")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("FiorelloFront.Models.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 5, 21, 20, 9, 9, 369, DateTimeKind.Local).AddTicks(6950),
                            Description = "Salam",
                            Image = "blog-feature-img-1.jpg",
                            IsDeleted = false,
                            Title = "Blog Ilgar"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 5, 21, 20, 9, 9, 369, DateTimeKind.Local).AddTicks(6950),
                            Description = "Salam",
                            Image = "blog-feature-img-3.jpg",
                            IsDeleted = false,
                            Title = "Blog Kmaran"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 5, 21, 20, 9, 9, 369, DateTimeKind.Local).AddTicks(6960),
                            Description = "Salam",
                            Image = "blog-feature-img-4.jpg",
                            IsDeleted = false,
                            Title = "Blog Orxan"
                        });
                });

            modelBuilder.Entity("FiorelloFront.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("FiorelloFront.Models.Experts", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Experts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 5, 21, 20, 9, 9, 369, DateTimeKind.Local).AddTicks(6970),
                            Image = "h3-team-img-1.png",
                            IsDeleted = false,
                            Name = "CRYSTAL BROOKS",
                            Position = "Florist"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 5, 21, 20, 9, 9, 369, DateTimeKind.Local).AddTicks(6980),
                            Image = "h3-team-img-2.png",
                            IsDeleted = false,
                            Name = "SHIRLEY HARRIS",
                            Position = "Manager"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 5, 21, 20, 9, 9, 369, DateTimeKind.Local).AddTicks(6980),
                            Image = "h3-team-img-3.png",
                            IsDeleted = false,
                            Name = "BEVERLY CLARK",
                            Position = "Florist"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 5, 21, 20, 9, 9, 369, DateTimeKind.Local).AddTicks(6980),
                            Image = "h3-team-img-4.png",
                            IsDeleted = false,
                            Name = "AMANDA WATKINS",
                            Position = "Florist"
                        });
                });

            modelBuilder.Entity("FiorelloFront.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("FiorelloFront.Models.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("FiorelloFront.Models.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 5, 21, 20, 9, 9, 369, DateTimeKind.Local).AddTicks(6940),
                            IsDeleted = false,
                            Key = "HeaderLogo",
                            Value = "logo.png"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 5, 21, 20, 9, 9, 369, DateTimeKind.Local).AddTicks(6940),
                            IsDeleted = false,
                            Key = "Phone",
                            Value = "+994508802323"
                        });
                });

            modelBuilder.Entity("FiorelloFront.Models.Slider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Sliders");
                });

            modelBuilder.Entity("FiorelloFront.Models.SliderInfo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("SliderInfo");
                });

            modelBuilder.Entity("FiorelloFront.Models.Social", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Icon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Socials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2024, 5, 21, 20, 9, 9, 369, DateTimeKind.Local).AddTicks(6850),
                            Icon = "<i class=\"fa-brands fa-twitter\"></i>",
                            IsDeleted = false,
                            Name = "Twitter",
                            Url = "https://twitter.com/home"
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2024, 5, 21, 20, 9, 9, 369, DateTimeKind.Local).AddTicks(6880),
                            Icon = "<i class=\"fa-brands fa-instagram\"></i>",
                            IsDeleted = false,
                            Name = "Instagram",
                            Url = "https://www.instagram.com/"
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2024, 5, 21, 20, 9, 9, 369, DateTimeKind.Local).AddTicks(6890),
                            Icon = "<i class=\"fa-brands fa-tumblr\"></i>",
                            IsDeleted = false,
                            Name = "Tumblr",
                            Url = "https://www.tumblr.com/"
                        },
                        new
                        {
                            Id = 4,
                            CreateDate = new DateTime(2024, 5, 21, 20, 9, 9, 369, DateTimeKind.Local).AddTicks(6890),
                            Icon = "<i class=\"fa-brands fa-pinterest\"></i>",
                            IsDeleted = false,
                            Name = "Pinterest",
                            Url = "https://www.pinterest.com/"
                        });
                });

            modelBuilder.Entity("FiorelloFront.Models.Product", b =>
                {
                    b.HasOne("FiorelloFront.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FiorelloFront.Models.ProductImage", b =>
                {
                    b.HasOne("FiorelloFront.Models.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("FiorelloFront.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("FiorelloFront.Models.Product", b =>
                {
                    b.Navigation("ProductImages");
                });
#pragma warning restore 612, 618
        }
    }
}
